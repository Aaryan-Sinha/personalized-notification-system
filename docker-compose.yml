version: "3.8"

services:
  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/27017"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/userdb
      - JWT_SECRET=71bb9c159da477383cdaf8a37fded4b3baf55e215566b9198e99c82b3bccae6c54564eee82f11d7269236ea9d9d6be211e24698d5e1df71bde61a8bf2a05c6b1
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Notification Service
  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - MONGO_URI=mongodb://mongo:27017/notificationdb
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Recommendation Service
  recommendation-service:
    build: ./recommendation-service
    container_name: recommendation-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - MONGO_URI=mongodb://mongo:27017/recommendationdb
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Order Mock Service
  order-mock-service:
    build: ./order-mock-service
    container_name: order-mock-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - MONGO_URI=mongodb://mongo:27017/orderdb
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # GraphQL Gateway
  graphql-gateway:
    build: ./graphql-gateway
    container_name: graphql-gateway
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - USER_SERVICE_URL=http://user-service:5000
      - NOTIFICATION_SERVICE_URL=http://notification-service:5001
      - RECOMMENDATION_SERVICE_URL=http://recommendation-service:5002
      - ORDER_SERVICE_URL=http://order-mock-service:5003
      - JWT_SECRET=71bb9c159da477383cdaf8a37fded4b3baf55e215566b9198e99c82b3bccae6c54564eee82f11d7269236ea9d9d6be211e24698d5e1df71bde61a8bf2a05c6b1
    depends_on:
      user-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
      recommendation-service:
        condition: service_healthy
      order-mock-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongo-data:
